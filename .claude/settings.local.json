{
  "permissions": {
    "allow": [
      "Bash(rm:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(npm audit:*)",
      "Bash(python:*)",
      "Bash(node --version)",
      "Bash(npm --version)",
      "Bash(mkdir:*)",
      "Bash(cat:*)",
      "Bash(npm install)",
      "Bash(npm run test:*)",
      "Bash(timeout 30 npm test -- --reporter=verbose)",
      "Bash(pip install:*)",
      "Read(D:\\Repo\\speech-app\\**)",
      "Read(/D:\\Repo\\speech-app\\**)",
      "Edit(D:\\Repo\\speech-app\\**)",
      "Edit(/D:\\Repo\\speech-app\\**)",
      "Read(D:\\Repo\\speech-app\\backend\\**)",
      "Edit(D:\\Repo\\speech-app\\backend\\**)",
      "Read(D:\\Repo\\speech-app\\frontend\\**)",
      "Edit(D:\\Repo\\speech-app\\frontend\\**)",
      "Read(D:\\Repo\\speech-app\\mobile\\**)",
      "Edit(D:\\Repo\\speech-app\\mobile\\**)",
      "Read(D:\\Repo\\speech-app\\design\\**)",
      "Edit(D:\\Repo\\speech-app\\design\\**)",
      "Read(D:\\Repo\\speech-app\\*.md)",
      "Edit(D:\\Repo\\speech-app\\*.md)",
      "Read(D:\\Repo\\speech-app\\*.yml)",
      "Edit(D:\\Repo\\speech-app\\*.yml)",
      "Read(D:\\Repo\\speech-app\\*.yaml)",
      "Edit(D:\\Repo\\speech-app\\*.yaml)",
      "Read(D:\\Repo\\speech-app\\*.json)",
      "Edit(D:\\Repo\\speech-app\\*.json)",
      "Read(D:\\Repo\\speech-app\\*.js)",
      "Edit(D:\\Repo\\speech-app\\*.js)",
      "Read(D:\\Repo\\speech-app\\*.ts)",
      "Edit(D:\\Repo\\speech-app\\*.ts)",
      "Read(D:\\Repo\\speech-app\\*.tsx)",
      "Edit(D:\\Repo\\speech-app\\*.tsx)",
      "Read(D:\\Repo\\speech-app\\*.py)",
      "Edit(D:\\Repo\\speech-app\\*.py)",
      "Read(D:\\Repo\\speech-app\\*.txt)",
      "Edit(D:\\Repo\\speech-app\\*.txt)",
      "Read(D:\\Repo\\speech-app\\*.dockerfile)",
      "Edit(D:\\Repo\\speech-app\\*.dockerfile)",
      "Read(D:\\Repo\\speech-app\\Dockerfile*)",
      "Edit(D:\\Repo\\speech-app\\Dockerfile*)",
      "Read(D:\\Repo\\speech-app\\docker-compose*)",
      "Edit(D:\\Repo\\speech-app\\docker-compose*)",
      "Bash(npm run build)",
      "Bash(npm run dev)",
      "Bash(npm run start)",
      "Bash(npm run lint)",
      "Bash(python manage.py:*)",
      "Bash(python -m:*)",
      "Bash(pip:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Read(/D:\\Repo\\speech-app\\design/**)",
      "Read(/D:\\Repo\\speech-app\\design/**)",
      "Read(/D:\\Repo\\speech-app\\design/**)",
      "Read(/D:\\Repo\\speech-app\\design/**)",
      "Read(/D:\\Repo\\speech-app\\design/**)",
      "Read(/D:\\Repo\\speech-app\\design/**)",
      "Read(/D:\\Repo\\speech-app\\frontend\\src\\pages\\main/**)",
      "Read(/D:\\Repo\\speech-app\\frontend/**)",
      "Read(/D:\\Repo\\speech-app\\frontend/**)",
      "Read(/D:\\Repo\\speech-app\\frontend/**)",
      "Read(/D:\\Repo\\speech-app\\frontend/**)",
      "Read(/D:\\Repo\\speech-app\\frontend/**)",
      "Read(/D:\\Repo\\speech-app\\frontend/**)",
      "Read(/D:\\Repo\\speech-app\\frontend/**)",
      "Bash(tree:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(npm install:*)",
      "Bash(npx tsc:*)",
      "Bash(npm test)",
      "Bash(npx vitest:*)",
      "Read(//r//**)",
      "Bash(timeout 10s npm run dev)",
      "Bash(timeout 5s npm run dev)",
      "Bash(npm cache clean:*)"
    ],
    "deny": [],
    "ask": []
  }
}