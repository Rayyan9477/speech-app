version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/audio_outputs:/app/audio_outputs
      - ./backend/models_cache:/app/models_cache
      - ./backend/vectordb:/app/vectordb
      - ./backend/logs:/app/logs
      - ./backend/voice_embeddings:/app/voice_embeddings
    environment:
      - DEBUG=true
      - LOG_LEVEL=INFO
      - SECRET_KEY=development-secret-key
      - ENCRYPT_AUDIO_FILES=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network

  # Next.js Web Application
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=production
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Development service for Next.js (with hot reload)
  web-dev:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev"
    depends_on:
      - backend
    profiles:
      - dev
    networks:
      - app-network

  # Expo Development Server (for mobile development)
  expo:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
      - "19006:19006"
    volumes:
      - ./mobile:/app
      - /app/node_modules
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=host.docker.internal
    command: sh -c "npm install && npx expo start --web"
    profiles:
      - mobile-dev
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  uploads:
  audio_outputs:
  models_cache:
  vectordb:
  logs:
  voice_embeddings: